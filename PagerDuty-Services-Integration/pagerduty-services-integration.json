{
    "typeName": "PagerDuty::Services::Integration",
    "description": "A resource schema representing a PagerDuty Integration belonging to a Service.",
    "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
    "definitions": {
        "PagerDutyAccess": {
            "type": "object",
            "properties": {
                "Token": {
                    "description": "Personal Access Token",
                    "type": "string"
                }
            },
            "required": [
                "Token"
            ],
            "additionalProperties": false
        },
        "ValueExtractor": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "entire",
                        "regex",
                        "between"
                    ]
                },
                "Part": {
                    "type": "string",
                    "enum": [
                        "body",
                        "subject",
                        "from_address"
                    ]
                },
                "ValueName": {
                    "type": "string",
                    "minLength": 1
                },
                "Regex": {
                    "type": "string"
                },
                "StartsAfter": {
                    "type": "string"
                },
                "EndsBefore": {
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "MatchPredicate": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "all",
                        "any",
                        "not",
                        "contains",
                        "exactly",
                        "regex"
                    ]
                },
                "Matcher": {
                    "type": "string"
                },
                "Part": {
                    "type": "string",
                    "enum": [
                        "body",
                        "subject",
                        "from_address"
                    ]
                }
            },
            "additionalProperties": false
        },
        "RootMatchPredicate": {
            "type": "object",
            "properties": {
                "Type": {
                    "type": "string",
                    "enum": [
                        "all",
                        "any",
                        "not"
                    ]
                },
                "Children": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/MatchPredicate"
                    }
                }
            },
            "additionalProperties": false
        },
        "EmailParser": {
            "type": "object",
            "properties": {
                "Action": {
                    "type": "string",
                    "enum": [
                        "trigger",
                        "resolve"
                    ]
                },
                "MatchPredicate": {
                    "$ref": "#/definitions/RootMatchPredicate"
                },
                "ValueExtractors": {
                    "type": "array",
                    "insertionOrder": false,
                    "items": {
                        "$ref": "#/definitions/ValueExtractor"
                    }
                }
            },
            "additionalProperties": false
        },
        "EmailFilter": {
            "type": "object",
            "properties": {
                "SubjectMode": {
                    "type": "string",
                    "enum": [
                        "match",
                        "no-match",
                        "always"
                    ]
                },
                "SubjectRegex": {
                    "type": "string"
                },
                "BodyMode": {
                    "type": "string",
                    "enum": [
                        "match",
                        "no-match",
                        "always"
                    ]
                },
                "BodyRegex": {
                    "type": "string"
                },
                "FromEmailMode": {
                    "type": "string",
                    "enum": [
                        "match",
                        "no-match",
                        "always"
                    ]
                },
                "FromEmailRegex": {
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "Id": {
            "type": "string",
            "minLength": 1
        },
        "Summary": {
            "description": "A short-form, server-generated string that provides succinct, important information about an object suitable for primary labeling of an entity in a client. In many cases, this will be identical to name, though it is not intended to be an identifier.",
            "type": "string"
        },
        "Self": {
            "description": "The API show URL at which the object is accessible",
            "type": "string"
        },
        "HtmlUrl": {
            "description": "A URL at which the entity is uniquely displayed in the Web app.",
            "type": "string"
        }
    },
    "typeConfiguration": {
        "properties": {
            "PagerDutyAccess": {
                "$ref": "#/definitions/PagerDutyAccess"
            }
        },
        "additionalProperties": false,
        "required": [
            "PagerDutyAccess"
        ]
    },
    "properties": {
        "Id": {
            "$ref": "#/definitions/Id"
        },
        "Summary": {
            "$ref": "#/definitions/Summary"
        },
        "Type": {
            "description": "The type of integration to be created. Refer to the API documentation for list of allowed values.",
            "type": "string",
            "enum": [
                "aws_cloudwatch_inbound_integration",
                "cloudkick_inbound_integration",
                "event_transformer_api_inbound_integration",
                "generic_email_inbound_integration",
                "generic_events_api_inbound_integration",
                "keynote_inbound_integration",
                "nagios_inbound_integration",
                "pingdom_inbound_integration",
                "sql_monitor_inbound_integration",
                "events_api_v2_inbound_integration"
            ]
        },
        "Self": {
            "$ref": "#/definitions/Self"
        },
        "HtmlUrl": {
            "$ref": "#/definitions/HtmlUrl"
        },
        "Name": {
            "description": "The name of integration to be created.",
            "type": "string"
        },
        "ServiceId": {
            "description": "The ID of the service integration should be associated with.",
            "type": "string"
        },
        "VendorId": {
            "description": "The ID of a third party vendor integration. Used for existing integrations.",
            "type": "string"
        },
        "IntegrationEmail": {
            "description": "Email address for the integration - must be set to an email address @your-subdomain.pagerduty.com. Specified only for generic_email_inbound_integration integrations.",
            "type": "string"
        },
        "EmailIncidentCreation": {
            "description": "Email incident creation. Specified only for generic_email_inbound_integration integrations.",
            "type": "string",
            "enum": [
                "on_new_email",
                "on_new_email_subject",
                "only_if_no_open_incidents",
                "use_rules"
            ]
        },
        "EmailFilterMode": {
            "description": "Email filter mode. Specified only for generic_email_inbound_integration integrations.",
            "type": "string",
            "enum": [
                "email",
                "or-rules-email",
                "and-rules-email"
            ]
        },
        "EmailParsers": {
            "description": "Email parsers. Specified only for generic_email_inbound_integration integrations.",
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/EmailParser"
            }
        },
        "EmailParsingFallback": {
            "description": "Email Parsing Fallback. Specified only for generic_email_inbound_integration integrations.",
            "type": "string",
            "enum": [
                "open_new_incident",
                "discard"
            ]
        },
        "EmailFilters": {
            "description": "Email filters. Specified only for generic_email_inbound_integration integrations.",
            "type": "array",
            "insertionOrder": false,
            "items": {
                "$ref": "#/definitions/EmailFilter"
            }
        },
        "IntegrationUrl": {
            "description": "The URL of the Integration.",
            "type": "string"
        }
    },
    "additionalProperties": false,
    "required": [
        "Type",
        "ServiceId"
    ],
    "readOnlyProperties": [
        "/properties/Id",
        "/properties/Summary",
        "/properties/HtmlUrl",
        "/properties/Self",
        "/properties/IntegrationUrl"
    ],
    "createOnlyProperties": [
        "/properties/ServiceId"
    ],
    "primaryIdentifier": [
        "/properties/Id",
        "/properties/ServiceId"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "appsync:CreateApiKey"
            ]
        },
        "read": {
            "permissions": [
                "appsync:CreateApiKey"
            ]
        },
        "update": {
            "permissions": [
                "appsync:CreateApiKey"
            ]
        },
        "delete": {
            "permissions": [
                "appsync:CreateApiKey"
            ]
        },
        "list": {
            "permissions": [
                "appsync:CreateApiKey"
            ]
        }
    }
}
